import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,f as e}from"./app-CBl934tH.js";const l={},n=e(`<h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h2><h3 id="小数类型" tabindex="-1"><a class="header-anchor" href="#小数类型"><span>小数类型</span></a></h3><p>小数，使用number类型</p><h3 id="insert" tabindex="-1"><a class="header-anchor" href="#insert"><span>insert</span></a></h3><p>相关博客：</p><ul><li><a href="https://blog.csdn.net/weixin_36204061/article/details/116325689" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_36204061/article/details/116325689</a></li></ul><h3 id="限制查询条数" tabindex="-1"><a class="header-anchor" href="#限制查询条数"><span>限制查询条数</span></a></h3><p>相关博客：</p><ul><li><a href="https://wenku.baidu.com/view/1dc843b068ec0975f46527d3240c844769eaa0e1.html" target="_blank" rel="noopener noreferrer">https://wenku.baidu.com/view/1dc843b068ec0975f46527d3240c844769eaa0e1.html</a></li></ul><p><strong>注意</strong>：这个用法在和order by排序搭配使用时需要留意是先排序还是先限制</p><h2 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数"><span>内置函数</span></a></h2><h3 id="截取字符串" tabindex="-1"><a class="header-anchor" href="#截取字符串"><span>截取字符串</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">substr(字段名,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>字符起始从1开始；</p><p>闭区间，两边都包含，例如substr(字段名,1,4)，字符串长度就是4</p><h3 id="强制转换" tabindex="-1"><a class="header-anchor" href="#强制转换"><span>强制转换</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(字段名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上是将字段强制转换为integer类型</p><p>在处理流水号的时候可以将固定的字符前缀去掉后使用如上方式排序</p><h2 id="存储过程" tabindex="-1"><a class="header-anchor" href="#存储过程"><span>存储过程</span></a></h2><p>存储函数相当于自定义函数，例如 <code>count()</code></p><p>使用之前需要先执行存储函数，然后查看存储函数的状态（是否有错误）</p><p>没错误的话就可以使用了</p><h3 id="blob类型转base64格式clob类型" tabindex="-1"><a class="header-anchor" href="#blob类型转base64格式clob类型"><span>blob类型转base64格式clob类型</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE OR REPLACE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FUNCTION</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> base64encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p_blob </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> BLOB)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   RETURN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  CLOB</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IS</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   l_clob CLOB;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   l_step PLS_INTEGER :</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   FOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  i  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IN</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .. TRUNC((</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">DBMS_LOB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">getlength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p_blob) - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )/l_step) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LOOP</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	   l_clob :</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> l_clob || </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">UTL_RAW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">cast_to_varchar2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">UTL_ENCODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">base64_encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">DBMS_LOB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">substr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p_blob, l_step, i * l_step + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  LOOP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   RETURN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  l_clob;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> base64encode;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个存储函数返回的就是base64格式的clob类型</p><p>使用的时候不要忘记判断一下blob是否为空</p>`,27),t=[n];function h(p,r){return a(),s("div",null,t)}const c=i(l,[["render",h],["__file","index.html.vue"]]),o=JSON.parse('{"path":"/%E6%95%B0%E6%8D%AE%E5%BA%93/RDBMS/Oracle/","title":"Oracle","lang":"zh-CN","frontmatter":{"title":"Oracle","description":"基础语法 小数类型 小数，使用number类型 insert 相关博客： https://blog.csdn.net/weixin_36204061/article/details/116325689 限制查询条数 相关博客： https://wenku.baidu.com/view/1dc843b068ec0975f46527d3240c844769...","head":[["meta",{"property":"og:url","content":"https://mahe666.github.io/doc/%E6%95%B0%E6%8D%AE%E5%BA%93/RDBMS/Oracle/"}],["meta",{"property":"og:site_name","content":"Mahe666"}],["meta",{"property":"og:title","content":"Oracle"}],["meta",{"property":"og:description","content":"基础语法 小数类型 小数，使用number类型 insert 相关博客： https://blog.csdn.net/weixin_36204061/article/details/116325689 限制查询条数 相关博客： https://wenku.baidu.com/view/1dc843b068ec0975f46527d3240c844769..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-16T11:31:59.000Z"}],["meta",{"property":"article:author","content":"Mahe666"}],["meta",{"property":"article:modified_time","content":"2024-06-16T11:31:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Oracle\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-16T11:31:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mahe666\\"}]}"]]},"headers":[{"level":2,"title":"基础语法","slug":"基础语法","link":"#基础语法","children":[{"level":3,"title":"小数类型","slug":"小数类型","link":"#小数类型","children":[]},{"level":3,"title":"insert","slug":"insert","link":"#insert","children":[]},{"level":3,"title":"限制查询条数","slug":"限制查询条数","link":"#限制查询条数","children":[]}]},{"level":2,"title":"内置函数","slug":"内置函数","link":"#内置函数","children":[{"level":3,"title":"截取字符串","slug":"截取字符串","link":"#截取字符串","children":[]},{"level":3,"title":"强制转换","slug":"强制转换","link":"#强制转换","children":[]}]},{"level":2,"title":"存储过程","slug":"存储过程","link":"#存储过程","children":[{"level":3,"title":"blob类型转base64格式clob类型","slug":"blob类型转base64格式clob类型","link":"#blob类型转base64格式clob类型","children":[]}]}],"git":{"createdTime":1686300087000,"updatedTime":1718537519000,"contributors":[{"name":"mahe666","email":"m13234666930@163.com","commits":1}]},"filePathRelative":"数据库/RDBMS/Oracle/README.md","localizedDate":"2023年6月9日","autoDesc":true}');export{c as comp,o as data};
