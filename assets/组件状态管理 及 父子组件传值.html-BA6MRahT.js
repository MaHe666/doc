import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as a,o as i}from"./app-CuYmUwPO.js";const p={};function l(t,n){return i(),e("div",null,n[0]||(n[0]=[a(`<p>相关博客：<a href="https://blog.csdn.net/qq_35946021/article/details/136452217" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_35946021/article/details/136452217</a></p><p>当A组件使用B组件的时候，A组件就是父组件，B组件就是子组件</p><p>ArkTS中的父子组件传值分为两种：父子组件对值的双向绑定，父组件对子组件单向传值</p><div class="hint-container tip"><p class="hint-container-title">官方文档描述如下</p><p>组件状态管理装饰器用来管理组件中的状态，它们分别是：<code>@State</code>、<code>@Prop</code>、<code>@Link</code>。</p><p><code>@State</code>装饰的变量是组件内部的状态数据，当这些状态数据被修改时，将会调用所在组件的build方法进行UI刷新。</p><p>官方文档：<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-state-0000001474017162-V2" target="_blank" rel="noopener noreferrer">https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-state-0000001474017162-V2</a></p><p><code>@Prop</code>与<code>@State</code>有相同的语义，但初始化方式不同。<code>@Prop</code>装饰的变量必须使用其父组件提供的<code>@State</code>变量进行初始化，允许组件内部修改<code>@Prop</code>变量，但更改不会通知给父组件，即<code>@Prop</code>属于单向数据绑定。</p><p>官方文档：<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-prop-0000001473537702-V2" target="_blank" rel="noopener noreferrer">https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-prop-0000001473537702-V2</a></p><p><code>@Link</code>装饰的变量可以和父组件的@State变量建立双向数据绑定，需要注意的是：<code>@Link</code>变量不能在组件内部进行初始化。</p><p>官方文档：<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-link-0000001524297305-V2" target="_blank" rel="noopener noreferrer">https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/arkts-link-0000001524297305-V2</a></p></div><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h2><p>父组件</p><div class="language-ets line-numbers-mode" data-highlighter="shiki" data-ext="ets" data-title="ets" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import {TitleComponent} from &quot;../view/TitleComponent&quot;</span></span>
<span class="line"><span>import {ButtonComponent} from &quot;../view/ButtonComponent&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Entry</span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>struct Index {</span></span>
<span class="line"><span>  @State text: string = &#39;World&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  build() {</span></span>
<span class="line"><span>    Row() {</span></span>
<span class="line"><span>      Column() {</span></span>
<span class="line"><span>        TitleComponent({message: this.text})</span></span>
<span class="line"><span>        ButtonComponent({content: $text})</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>      .width(&#39;100%&#39;)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    .height(&#39;100%&#39;)</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文本子组件</p><div class="language-ets line-numbers-mode" data-highlighter="shiki" data-ext="ets" data-title="ets" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Component</span></span>
<span class="line"><span>export struct TitleComponent {</span></span>
<span class="line"><span>  @Prop message: string</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  build() {</span></span>
<span class="line"><span>    Row() {</span></span>
<span class="line"><span>      Text(&quot;Hello, &quot; + this.message)</span></span>
<span class="line"><span>        .fontSize(50)</span></span>
<span class="line"><span>        .fontWeight(FontWeight.Bold)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按钮子组件</p><div class="language-ets line-numbers-mode" data-highlighter="shiki" data-ext="ets" data-title="ets" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Component</span></span>
<span class="line"><span>export struct ButtonComponent {</span></span>
<span class="line"><span>  @Link content: string</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  build() {</span></span>
<span class="line"><span>    Row() {</span></span>
<span class="line"><span>      Button(&quot;这是个按钮&quot;)</span></span>
<span class="line"><span>        .height(80)</span></span>
<span class="line"><span>        .width(200)</span></span>
<span class="line"><span>        .margin(10)</span></span>
<span class="line"><span>        .onClick(() =&gt; {</span></span>
<span class="line"><span>          this.content = &quot;mahe666&quot;</span></span>
<span class="line"><span>        })</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const d=s(p,[["render",l],["__file","组件状态管理 及 父子组件传值.html.vue"]]),c=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/HarmonyOS/ArkTS%20%E5%92%8C%20ArkUI/%E7%BB%84%E4%BB%B6%E5%8F%8A%E8%A3%85%E9%A5%B0%E5%99%A8/%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%20%E5%8F%8A%20%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC.html","title":"组件状态管理 及 父子组件传值","lang":"zh-CN","frontmatter":{"title":"组件状态管理 及 父子组件传值","order":10,"description":"相关博客：https://blog.csdn.net/qq_35946021/article/details/136452217 当A组件使用B组件的时候，A组件就是父组件，B组件就是子组件 ArkTS中的父子组件传值分为两种：父子组件对值的双向绑定，父组件对子组件单向传值 官方文档描述如下 组件状态管理装饰器用来管理组件中的状态，它们分别是：@Sta...","head":[["meta",{"property":"og:url","content":"https://mahe666.github.io/doc/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/HarmonyOS/ArkTS%20%E5%92%8C%20ArkUI/%E7%BB%84%E4%BB%B6%E5%8F%8A%E8%A3%85%E9%A5%B0%E5%99%A8/%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%20%E5%8F%8A%20%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC.html"}],["meta",{"property":"og:site_name","content":"Mahe666"}],["meta",{"property":"og:title","content":"组件状态管理 及 父子组件传值"}],["meta",{"property":"og:description","content":"相关博客：https://blog.csdn.net/qq_35946021/article/details/136452217 当A组件使用B组件的时候，A组件就是父组件，B组件就是子组件 ArkTS中的父子组件传值分为两种：父子组件对值的双向绑定，父组件对子组件单向传值 官方文档描述如下 组件状态管理装饰器用来管理组件中的状态，它们分别是：@Sta..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-08T07:43:35.000Z"}],["meta",{"property":"article:author","content":"Mahe666"}],["meta",{"property":"article:modified_time","content":"2024-07-08T07:43:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件状态管理 及 父子组件传值\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-08T07:43:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mahe666\\"}]}"]]},"headers":[{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[]}],"git":{"createdTime":1718805880000,"updatedTime":1720424615000,"contributors":[{"name":"mahe666","email":"m13234666930@163.com","commits":1}]},"filePathRelative":"编程开发/前端/HarmonyOS/ArkTS 和 ArkUI/组件及装饰器/组件状态管理 及 父子组件传值.md","localizedDate":"2024年6月19日","autoDesc":true}');export{d as comp,c as data};
