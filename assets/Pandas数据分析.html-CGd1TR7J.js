import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as l,c as i,d as n,e as p,a as e,f as a}from"./app-CbLsyo3e.js";const u={},d={href:"https://pandas.pydata.org/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.pypandas.cn/",target:"_blank",rel:"noopener noreferrer"},k=a(`<p>Pandas是Python编程语言的用于数据操纵和分析的软件库。</p><p>特别是，它提供操纵数值表格和时间序列的数据结构和运算操作</p><h2 id="简单的输出excel" tabindex="-1"><a class="header-anchor" href="#简单的输出excel"><span>简单的输出excel</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment">#创建一个数据表</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">#为表格中添加数据</span>
    <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;Spike&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Jerry&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">#使用自己的id作为索引</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>

<span class="token comment">#输出为excel表格</span>
df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&quot;./output.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="简单的读取excel" tabindex="-1"><a class="header-anchor" href="#简单的读取excel"><span>简单的读取excel</span></a></h2><h3 id="处理列表头" tabindex="-1"><a class="header-anchor" href="#处理列表头"><span>处理列表头</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment">#读取excel表格，并封装为对象</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;./output.xlsx&#39;</span><span class="token punctuation">)</span>

<span class="token comment">#获取对象中的行数和列数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

<span class="token comment">#获取列头信息</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>columns<span class="token punctuation">)</span>

<span class="token comment">#打印表格全部的信息</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>

<span class="token comment">#打印表格的前两个信息</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#打印表格的后两个信息</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取时指定索引列" tabindex="-1"><a class="header-anchor" href="#读取时指定索引列"><span>读取时指定索引列</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment">#也可以在读取时直接指定索引列</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./output.xlsx&quot;</span><span class="token punctuation">,</span>index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="行-列-单元格" tabindex="-1"><a class="header-anchor" href="#行-列-单元格"><span>行，列，单元格</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># pandas序列中，data、name和index是非常重要的</span>

<span class="token triple-quoted-string string">&#39;&#39;&#39;
pandas序列的值和字典的键值对差不多
d={&#39;x&#39;:100,&#39;y&#39;:200,&#39;c&#39;:300}
s1 = pd.Series(d)
print(s1)
&#39;&#39;&#39;</span>

s1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
s2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span>
s3 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 注意加入的方式！！！</span>
<span class="token comment"># 键值对方式是以序列的index作为行号</span>
<span class="token comment"># 列表方式是以序列的index作为列号</span>
df1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>s1<span class="token punctuation">.</span>name<span class="token punctuation">:</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">.</span>name<span class="token punctuation">:</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">.</span>name<span class="token punctuation">:</span> s3<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span>
df2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pandas中dataframe定位数据单元格的方法集锦" tabindex="-1"><a class="header-anchor" href="#pandas中dataframe定位数据单元格的方法集锦"><span>pandas中DataFrame定位数据单元格的方法集锦</span></a></h3><p>相关博客：</p>`,15),m={href:"https://blog.csdn.net/weixin_30650859/article/details/97578737",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/guxh/p/8627251.html",target:"_blank",rel:"noopener noreferrer"},b=a(`<hr><h2 id="数据填充" tabindex="-1"><a class="header-anchor" href="#数据填充"><span>数据填充</span></a></h2><h3 id="填充数字-字符串及日期" tabindex="-1"><a class="header-anchor" href="#填充数字-字符串及日期"><span>填充数字，字符串及日期</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date<span class="token punctuation">,</span> timedelta

<span class="token comment"># 月份+1的算法</span>
<span class="token keyword">def</span> <span class="token function">add_month</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> md<span class="token punctuation">)</span><span class="token punctuation">:</span>
    yd <span class="token operator">=</span> md <span class="token operator">//</span> <span class="token number">12</span>
    m <span class="token operator">=</span> d<span class="token punctuation">.</span>month <span class="token operator">+</span> md <span class="token operator">%</span> <span class="token number">12</span>
    <span class="token keyword">if</span> m <span class="token operator">!=</span> <span class="token number">12</span><span class="token punctuation">:</span>
        yd <span class="token operator">+=</span> m <span class="token operator">//</span> <span class="token number">12</span>
        m <span class="token operator">=</span> m <span class="token operator">%</span> <span class="token number">12</span>
    <span class="token keyword">return</span> date<span class="token punctuation">(</span>d<span class="token punctuation">.</span>year <span class="token operator">+</span> yd<span class="token punctuation">,</span> m<span class="token punctuation">,</span> d<span class="token punctuation">.</span>day<span class="token punctuation">)</span>

<span class="token comment"># skiprows为跳过多少个空行</span>
<span class="token comment"># usecols为以列标为基准读取从哪到哪的列，两边的都包括</span>
<span class="token comment"># dtype是为列设置为类型，注意：NaN类型不能转为int类型，所以需要先转为str类型才可以</span>
books <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/Books.xlsx&quot;</span><span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token string">&quot;C:F&quot;</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token string">&#39;is_inRepo&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

start <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> books<span class="token punctuation">.</span>index<span class="token punctuation">:</span>
    books<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>at<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>
    books<span class="token punctuation">[</span><span class="token string">&#39;is_inRepo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>at<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Yes&#39;</span> <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">&#39;No&#39;</span>
    <span class="token comment"># 天数+1</span>
    <span class="token comment"># books[&#39;date&#39;].at[i] = start + timedelta(days=i)</span>
    <span class="token comment"># 年数+1</span>
    <span class="token comment"># books[&#39;date&#39;].at[i] = date(start.year + i, start.month, start.day)</span>
    <span class="token comment"># 月数+1</span>
    books<span class="token punctuation">[</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>at<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> add_month<span class="token punctuation">(</span>start<span class="token punctuation">,</span>i<span class="token punctuation">)</span>
books<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件" tabindex="-1"><a class="header-anchor" href="#附件"><span>附件</span></a></h4>`,5),h=["href"],g=a(`<h3 id="填充函数-计算列" tabindex="-1"><a class="header-anchor" href="#填充函数-计算列"><span>填充函数，计算列</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

books <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/Books2.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># pandas操作的是列，而不是单元格</span>
<span class="token comment"># 也可以使用for循环迭代对单元格进行操作</span>
books<span class="token punctuation">[</span><span class="token string">&#39;finalPrice&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> books<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> books<span class="token punctuation">[</span><span class="token string">&#39;discount&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">add_2</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span>

<span class="token comment"># 让原有的价格都上涨2元</span>
books<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> books<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>add_2<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-1" tabindex="-1"><a class="header-anchor" href="#附件-1"><span>附件</span></a></h4>`,3),y=["href"],x=a(`<hr><h2 id="排序-多重排序" tabindex="-1"><a class="header-anchor" href="#排序-多重排序"><span>排序，多重排序</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

items <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/Items.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 按照价格排序，ascending为从小到大排序，默认为true，false为从大到小</span>
<span class="token comment"># items.sort_values(by=&#39;price&#39;,inplace=True,ascending=False)</span>


<span class="token comment"># 多重排序，worthy为从小到大A-Z，price为大到小</span>
<span class="token comment"># 先排序哪个，就把列表名先写在前面</span>
<span class="token comment"># ascending 为是否升序排序（从小到大）</span>
items<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;worthy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-2" tabindex="-1"><a class="header-anchor" href="#附件-2"><span>附件</span></a></h4>`,4),w=["href"],f=a(`<hr><h2 id="数据筛选-过滤" tabindex="-1"><a class="header-anchor" href="#数据筛选-过滤"><span>数据筛选，过滤</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">age_18_to_30</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">18</span> <span class="token operator">&lt;=</span> a <span class="token operator">&lt;</span> <span class="token number">30</span>


<span class="token keyword">def</span> <span class="token function">score_85_to_100</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">85</span> <span class="token operator">&lt;=</span> s <span class="token operator">&lt;=</span> <span class="token number">100</span>


scores <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/Score1.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># loc是locate的缩写，是定位的意思</span>
<span class="token comment"># 筛选年龄在18-30，分数在85-100之间的数据</span>
scores <span class="token operator">=</span> scores<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>scores<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>age_18_to_30<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>scores<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>score_85_to_100<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>scores<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-3" tabindex="-1"><a class="header-anchor" href="#附件-3"><span>附件</span></a></h4>`,4),_=["href"],q=a(`<hr><h2 id="柱状图" tabindex="-1"><a class="header-anchor" href="#柱状图"><span>柱状图</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token comment"># 制图需要的依赖</span>
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/BarChart.xlsx&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 如果数据是乱的，需要先对数据进行排序，然后再渲染图表</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token comment"># --------------------------------------------------------------</span>
<span class="token comment"># 使用color属性为所有的column选定统一的颜色</span>
<span class="token comment"># 使用title为图表命名</span>
<span class="token comment">#data.plot.bar(x=&#39;name&#39;, y=&#39;number&#39;, color=&#39;orange&#39;, title=&#39;test1&#39;)</span>

<span class="token comment"># 显示全名</span>
<span class="token comment"># plt.tight_layout()</span>

<span class="token comment"># 渲染图表</span>
<span class="token comment"># plt.show()</span>

<span class="token comment"># --------------------------------------------------------------</span>
plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;number&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 设置名字的列及显示角度</span>
plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>rotation<span class="token operator">=</span><span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 设置横向的label</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 设置纵向的label</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 设置表名及字号</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;test2&#39;</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-4" tabindex="-1"><a class="header-anchor" href="#附件-4"><span>附件</span></a></h4>`,4),P=["href"],B=a(`<h3 id="分组柱状图深度优化" tabindex="-1"><a class="header-anchor" href="#分组柱状图深度优化"><span>分组柱状图深度优化</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/BarChart2.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

data<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> fontweight<span class="token operator">=</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> fontweight<span class="token operator">=</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span> fontweight<span class="token operator">=</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># gca为优化轴</span>
ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># ha为对齐的位置</span>
ax<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">&#39;right&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># gcf为优化图像</span>
f <span class="token operator">=</span> plt<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#左边留出20%，底部留出42%</span>
f<span class="token punctuation">.</span>subplots_adjust<span class="token punctuation">(</span>left<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> bottom<span class="token operator">=</span><span class="token number">0.42</span><span class="token punctuation">)</span>

<span class="token comment"># plt.tight_layout()</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-5" tabindex="-1"><a class="header-anchor" href="#附件-5"><span>附件</span></a></h4>`,3),T=["href"],C=a(`<h3 id="叠加水平柱状图" tabindex="-1"><a class="header-anchor" href="#叠加水平柱状图"><span>叠加水平柱状图</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/BarChart3.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment">#可以根据总量进行排序</span>
data<span class="token punctuation">[</span><span class="token string">&#39;Total&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token operator">+</span>data<span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token operator">+</span>data<span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment">#stacked为数据堆叠</span>
<span class="token comment">#垂直</span>
data<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stacked<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment">#水平</span>
data<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>barh<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stacked<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-6" tabindex="-1"><a class="header-anchor" href="#附件-6"><span>附件</span></a></h4>`,3),$=["href"],D=a(`<hr><h2 id="饼状图" tabindex="-1"><a class="header-anchor" href="#饼状图"><span>饼状图</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/PieChart.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment"># python的旋转为逆时针，excel中为顺时针，这里的排序是为了和excel的旋转顺序一致</span>
<span class="token comment"># data[&#39;num&#39;].sort_values(ascending=True).plot.pie(fontsize=8,startangle=-270)</span>

<span class="token comment"># 还有一种方式</span>
data<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> counterclock<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> startangle<span class="token operator">=</span><span class="token operator">-</span><span class="token number">270</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;testTitle&#39;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> fontweight<span class="token operator">=</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-7" tabindex="-1"><a class="header-anchor" href="#附件-7"><span>附件</span></a></h4>`,4),S=["href"],F=a(`<hr><h2 id="折线图与叠加区域图" tabindex="-1"><a class="header-anchor" href="#折线图与叠加区域图"><span>折线图与叠加区域图</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/LineChart.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment"># 折线图</span>
data<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 叠加区域图</span>
data<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>area<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 如果想在横坐标展示出所有的信息，就使用下面的语句</span>
<span class="token comment"># plt.xticks(data.name, fontsize=8)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-8" tabindex="-1"><a class="header-anchor" href="#附件-8"><span>附件</span></a></h4>`,4),R=["href"],L=a(`<hr><h2 id="散点图" tabindex="-1"><a class="header-anchor" href="#散点图"><span>散点图</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

<span class="token comment"># 设置最大展示的列的数量</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns <span class="token operator">=</span> <span class="token number">999</span>

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/ScatterChart.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment"># 想和excel一样，把下面的x和y颠倒一下即可</span>
data<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-9" tabindex="-1"><a class="header-anchor" href="#附件-9"><span>附件</span></a></h4>`,4),N=["href"],O=a(`<hr><h2 id="直方图与密度图" tabindex="-1"><a class="header-anchor" href="#直方图与密度图"><span>直方图与密度图</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns <span class="token operator">=</span> <span class="token number">999</span>

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/Histogram.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment"># 直方图</span>
<span class="token comment"># 分布区间也称为桶,这里我们设为100，就是往100个桶里装</span>
data<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>bins<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>

<span class="token comment"># 密度图</span>
data<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>kde<span class="token punctuation">(</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># data.corr() 方法用于查看列与列之间的相关性</span>
<span class="token comment"># 1代表是同一列，除此之外，越接近1，相关性就越多</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-10" tabindex="-1"><a class="header-anchor" href="#附件-10"><span>附件</span></a></h4>`,4),z=["href"],I=a(`<hr><h2 id="多表联合" tabindex="-1"><a class="header-anchor" href="#多表联合"><span>多表联合</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

name <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/multiTables/name.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">)</span>
score <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/multiTables/score.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;Sheet1&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 可以发现，多余的数据并没有显示出来，现在默认的联表方式为inner join</span>
<span class="token comment"># table = name.merge(score, on=&#39;id&#39;)</span>

<span class="token comment"># 左连接，并且用0填充NaN</span>
table <span class="token operator">=</span> name<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>score<span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># 将类型转换为int</span>
table<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> table<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>

<span class="token comment"># 如果不设置on=&#39;id&#39;，而是用index_col=&#39;id&#39;,使用merge就会出错。</span>
<span class="token comment"># 这个时候需要将merge换成join就好</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-11" tabindex="-1"><a class="header-anchor" href="#附件-11"><span>附件</span></a></h4>`,4),V=["href"],j=["href"],A=a(`<hr><h2 id="数据校验-轴的概念" tabindex="-1"><a class="header-anchor" href="#数据校验-轴的概念"><span>数据校验，轴的概念</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">validation</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#这里可以用异常的方式来处理，也可以用if语句来处理</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">assert</span> row<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">0</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>row<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> 的数字不符合规范：</span><span class="token interpolation"><span class="token punctuation">{</span>row<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/DataValidation.xlsx&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># axis是轴，1为横轴，0为竖轴，我们这里校验数据需要一行一行的校验</span>
data<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>validation<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-12" tabindex="-1"><a class="header-anchor" href="#附件-12"><span>附件</span></a></h4>`,4),E=["href"],H=a(`<hr><h2 id="将一列数据分割成两列" tabindex="-1"><a class="header-anchor" href="#将一列数据分割成两列"><span>将一列数据分割成两列</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/SeperateCol.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 将一列的内容分割为列表,默认分隔符为空格或tab</span>
<span class="token comment"># df = data[&#39;name&#39;].str.split()</span>

<span class="token comment"># 将一列直接分为两列，参数n为0或1时是保留全部截取下来的字符串</span>
<span class="token comment"># df = data[&#39;name&#39;].str.split(n=0,expand=True)</span>
df <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> expand<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

data<span class="token punctuation">[</span><span class="token string">&#39;name1&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
data<span class="token punctuation">[</span><span class="token string">&#39;name2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-13" tabindex="-1"><a class="header-anchor" href="#附件-13"><span>附件</span></a></h4>`,4),J=["href"],W=a(`<hr><h2 id="求和、求平均-统计导引" tabindex="-1"><a class="header-anchor" href="#求和、求平均-统计导引"><span>求和、求平均，统计导引</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/SumAndAverage.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 将三列数据放到一个新的数据表中</span>
df <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># 处理横向的总值和平均值</span>
data<span class="token punctuation">[</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
data<span class="token punctuation">[</span><span class="token string">&#39;average&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 列的平均值</span>
col_mean <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sum&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;average&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

data <span class="token operator">=</span> data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>col_mean<span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-14" tabindex="-1"><a class="header-anchor" href="#附件-14"><span>附件</span></a></h4>`,4),Y=["href"],Z=a(`<hr><h2 id="定位-消除重复数据" tabindex="-1"><a class="header-anchor" href="#定位-消除重复数据"><span>定位，消除重复数据</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/RemoveDuplicatedData.xlsx&quot;</span><span class="token punctuation">,</span>index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># subset参数为以哪一列为基准去除重复数据</span>
<span class="token comment"># keep参数为当有重复数据时，保留第几个，默认为first，我们可以改成last，使其去掉前面的重复数据</span>
<span class="token comment"># data.drop_duplicates(subset=&#39;name&#39;,inplace=True)</span>

<span class="token comment"># print(data)</span>

<span class="token comment"># 使用pandas找出重复数据</span>
dup <span class="token operator">=</span> data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 其中为True的就是重复数据</span>
<span class="token comment"># print(dup)</span>
<span class="token comment"># 为True则该表包含重复数据，false为不包含</span>
<span class="token comment"># print(dup.any())</span>

<span class="token comment">#做个简单的定位，锁定为True的数据</span>
dup <span class="token operator">=</span> dup<span class="token punctuation">[</span>dup <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">]</span>
<span class="token comment">#获取重复数据索引</span>
<span class="token comment"># print(dup.index)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>dup<span class="token punctuation">.</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-15" tabindex="-1"><a class="header-anchor" href="#附件-15"><span>附件</span></a></h4>`,4),G=["href"],K=a(`<hr><h2 id="旋转表格" tabindex="-1"><a class="header-anchor" href="#旋转表格"><span>旋转表格</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns <span class="token operator">=</span> <span class="token number">999</span>

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/RotateTable.xlsx&quot;</span><span class="token punctuation">)</span>

df <span class="token operator">=</span> data<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-16" tabindex="-1"><a class="header-anchor" href="#附件-16"><span>附件</span></a></h4>`,4),M=["href"],Q=a(`<hr><h2 id="读取csv-tsv-txt-html" tabindex="-1"><a class="header-anchor" href="#读取csv-tsv-txt-html"><span>读取csv，tsv，txt，html</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

csvData <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;./excel/otherFile/csv.csv&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># tsvData = pd.read_csv(&quot;./excel/otherFile/tsv.tsv&quot;,sep=&#39;\\t&#39;)</span>

<span class="token comment">#sep为分隔符</span>
txtData <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;./excel/otherFile/txt.txt&quot;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>

htmlData <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_html<span class="token punctuation">(</span><span class="token string">&quot;./excel/otherFile/html.htm&quot;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

htmlData<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-17" tabindex="-1"><a class="header-anchor" href="#附件-17"><span>附件</span></a></h4>`,4),U=["href"],X=["href"],nn=["href"],sn=a(`<hr><h2 id="透视表、分组、聚合" tabindex="-1"><a class="header-anchor" href="#透视表、分组、聚合"><span>透视表、分组、聚合</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/PivotTable.xlsx&quot;</span><span class="token punctuation">)</span>

data<span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>DatetimeIndex<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year

<span class="token comment"># index是rose</span>
<span class="token comment"># pt1 = data.pivot_table(index=&#39;type&#39;, columns=&#39;year&#39;, values=&#39;num&#39;)</span>
<span class="token comment"># print(pt1)</span>

groups <span class="token operator">=</span> data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

s <span class="token operator">=</span> groups<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> groups<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>

pt2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">:</span> s<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span> c<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pt2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-18" tabindex="-1"><a class="header-anchor" href="#附件-18"><span>附件</span></a></h4>`,4),an=["href"],pn=a(`<hr><h2 id="线性回归-预测趋势" tabindex="-1"><a class="header-anchor" href="#线性回归-预测趋势"><span>线性回归，预测趋势</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">import</span> linregress

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/LinearRegression.xlsx&quot;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 开始画趋势线</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
slope是斜率
intercept是在外轴上的截距
exp为期望值
&#39;&#39;&#39;</span>
slope<span class="token punctuation">,</span> intercept<span class="token punctuation">,</span> r<span class="token punctuation">,</span> p<span class="token punctuation">,</span> std_err <span class="token operator">=</span> linregress<span class="token punctuation">(</span>data<span class="token punctuation">.</span>index<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
exp <span class="token operator">=</span> data<span class="token punctuation">.</span>index <span class="token operator">*</span> slope <span class="token operator">+</span> intercept

<span class="token comment"># 先做一个散点图</span>
plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>data<span class="token punctuation">.</span>index<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 再划线</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>data<span class="token punctuation">.</span>index<span class="token punctuation">,</span> exp<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;orange&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># plt.title(&quot;LinearRegression&quot;)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;y=</span><span class="token interpolation"><span class="token punctuation">{</span>slope<span class="token punctuation">}</span></span><span class="token string">*x+</span><span class="token interpolation"><span class="token punctuation">{</span>intercept<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>data<span class="token punctuation">.</span>index<span class="token punctuation">,</span> data<span class="token punctuation">.</span>index<span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 预测下一年的数字</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>slope <span class="token operator">*</span> <span class="token number">35</span> <span class="token operator">+</span> intercept<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-19" tabindex="-1"><a class="header-anchor" href="#附件-19"><span>附件</span></a></h4>`,4),tn=["href"],en=n("hr",null,null,-1),on=n("h2",{id:"条件格式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#条件格式"},[n("span",null,"条件格式")])],-1),cn=n("p",null,"这里我们需要用到 Jupyter notebook",-1),ln=n("p",null,"打开Anaconda Prompt，输入jupyter notebook或者直接打开jupyter notebook",-1),un=n("p",null,"然后点击左上角的new，选择Python3",-1),dn=n("h4",{id:"附件-20",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#附件-20"},[n("span",null,"附件")])],-1),rn=["href"],kn=a(`<h3 id="按照条件修改数据颜色" tabindex="-1"><a class="header-anchor" href="#按照条件修改数据颜色"><span>按照条件修改数据颜色</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token keyword">def</span> <span class="token function">low_num_red</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span> <span class="token keyword">if</span> num<span class="token operator">&lt;</span><span class="token number">50</span> <span class="token keyword">else</span> <span class="token string">&#39;black&#39;</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&#39;color:</span><span class="token interpolation"><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>

<span class="token keyword">def</span> <span class="token function">high_num_green</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;background-color:lime&#39;</span> <span class="token keyword">if</span> num<span class="token operator">==</span>col<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&#39;background-color:white&#39;</span> <span class="token keyword">for</span> num <span class="token keyword">in</span> col<span class="token punctuation">]</span>

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">r&#39;D:\\myCodes\\python\\eTest\\excel\\ConditionalFormat.xlsx&#39;</span><span class="token punctuation">)</span>

<span class="token comment">#apply是按照行或列进行施加，applymap是无差别施加</span>
data<span class="token punctuation">.</span>style<span class="token punctuation">.</span>applymap<span class="token punctuation">(</span>low_num_red<span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>high_num_green<span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按照条件修改数据颜色深浅" tabindex="-1"><a class="header-anchor" href="#按照条件修改数据颜色深浅"><span>按照条件修改数据颜色深浅</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token keyword">def</span> <span class="token function">low_num_red</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span> <span class="token keyword">if</span> num<span class="token operator">&lt;</span><span class="token number">50</span> <span class="token keyword">else</span> <span class="token string">&#39;black&#39;</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&#39;color:</span><span class="token interpolation"><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>

<span class="token keyword">def</span> <span class="token function">high_num_green</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;background-color:lime&#39;</span> <span class="token keyword">if</span> num<span class="token operator">==</span>col<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&#39;background-color:white&#39;</span> <span class="token keyword">for</span> num <span class="token keyword">in</span> col<span class="token punctuation">]</span>

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">r&#39;D:\\myCodes\\python\\eTest\\excel\\ConditionalFormat.xlsx&#39;</span><span class="token punctuation">)</span>

<span class="token comment">#apply是按照行或列进行施加，applymap是无差别施加</span>
data<span class="token punctuation">.</span>style<span class="token punctuation">.</span>applymap<span class="token punctuation">(</span>low_num_red<span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>high_num_green<span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按照条件修改数据颜色填充度" tabindex="-1"><a class="header-anchor" href="#按照条件修改数据颜色填充度"><span>按照条件修改数据颜色填充度</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">r&#39;D:\\myCodes\\python\\eTest\\excel\\ConditionalFormat.xlsx&#39;</span><span class="token punctuation">)</span>

data<span class="token punctuation">.</span>style<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;num1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;num3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="行操作集锦" tabindex="-1"><a class="header-anchor" href="#行操作集锦"><span>行操作集锦</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

sheet1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/RowOperate.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
sheet2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/RowOperate.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 拼接，并使用新的id</span>
data <span class="token operator">=</span> sheet1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet2<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># data[&#39;id&#39;] = data.index</span>

person1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;oo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>person1<span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 向数据中间插入一条数据,这里的例子是向3和4之间添加</span>
person2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;pp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;num&#39;</span><span class="token punctuation">:</span> <span class="token number">111</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment"># 这里进行切片，注意区间的包左不包右的特性</span>
part1 <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
part2 <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
data <span class="token operator">=</span> part1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>person2<span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>part2<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 按照id，删除行数据，可以用切片的方式，也可以用range函数的方式</span>
data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 按照某一列的数据，删除符合条件的行</span>
missing <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">]</span>
data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>index<span class="token operator">=</span>missing<span class="token punctuation">.</span>index<span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-21" tabindex="-1"><a class="header-anchor" href="#附件-21"><span>附件</span></a></h4>`,10),mn=["href"],vn=a(`<hr><h2 id="列操作集锦" tabindex="-1"><a class="header-anchor" href="#列操作集锦"><span>列操作集锦</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

sheet1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/ColOperate.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
sheet2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&quot;./excel/ColOperate.xlsx&quot;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 并列显示</span>
<span class="token comment"># data = pd.concat([sheet1, sheet2], axis=1).reset_index(drop=True)</span>

data <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>sheet1<span class="token punctuation">,</span> sheet2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 添加列，np.arrange()函数会返回一个列表</span>
data<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 删除列</span>
data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 新增列，支持向两个列中间添加,第一个数字为目标列号，默认为inplace=True</span>
data<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> column<span class="token operator">=</span><span class="token string">&#39;newCol&#39;</span><span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token string">&#39;newCol&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 列名改为大写</span>
data<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;newCol&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;NEWCOL&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 去掉有not a number的行（NaN）</span>
data<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="附件-22" tabindex="-1"><a class="header-anchor" href="#附件-22"><span>附件</span></a></h4>`,4),bn=["href"],hn=a(`<hr><h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h2><h3 id="获取文件夹下的所有文件绝对路径" tabindex="-1"><a class="header-anchor" href="#获取文件夹下的所有文件绝对路径"><span>获取文件夹下的所有文件绝对路径</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> os


<span class="token keyword">def</span> <span class="token function">get_file_path_by_name</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&#39;&#39;&#39;
    获取指定路径下所有文件的绝对路径
    :param file_dir:
    :return:
    &#39;&#39;&#39;</span>
    L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 获取所有文件</span>
        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>  <span class="token comment"># 遍历所有文件名</span>
            <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.xlsx&#39;</span><span class="token punctuation">:</span>
                L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 拼接处绝对路径并放入列表</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;总文件数目：&#39;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> L


<span class="token keyword">print</span><span class="token punctuation">(</span>get_file_path_by_name<span class="token punctuation">(</span><span class="token string">r&#39;D:\\tmp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置数据表显示在控制台的属性" tabindex="-1"><a class="header-anchor" href="#设置数据表显示在控制台的属性"><span>设置数据表显示在控制台的属性</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#设置最大展示的列数</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns <span class="token operator">=</span> <span class="token number">999</span>

<span class="token comment">#设置最多展示的行数</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_rows <span class="token operator">=</span> <span class="token number">999</span>

<span class="token comment">#设置输出到控制台时的宽度</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function gn(s,yn){const t=c("ExternalLinkIcon");return l(),i("div",null,[n("p",null,[p("官网："),n("a",d,[p("https://pandas.pydata.org/"),e(t)])]),n("p",null,[p("中文官网："),n("a",r,[p("https://www.pypandas.cn/"),e(t)])]),k,n("ul",null,[n("li",null,[n("p",null,[n("a",m,[p("https://blog.csdn.net/weixin_30650859/article/details/97578737"),e(t)])])]),n("li",null,[n("p",null,[n("a",v,[p("https://www.cnblogs.com/guxh/p/8627251.html"),e(t)])])])]),b,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/Books.xlsx"),download:""},"Books.xlsx",8,h)]),g,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/Books2.xlsx"),download:""},"Books2.xlsx",8,y)]),x,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/Items.xlsx"),download:""},"Items.xlsx",8,w)]),f,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/Score1.xlsx"),download:""},"Score1.xlsx",8,_)]),q,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/BarChart.xlsx"),download:""},"BarChart.xlsx",8,P)]),B,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/BarChart2.xlsx"),download:""},"BarChart2.xlsx",8,T)]),C,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/BarChart3.xlsx"),download:""},"BarChart3.xlsx",8,$)]),D,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/PieChart.xlsx"),download:""},"PieChart.xlsx",8,S)]),F,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/LineChart.xlsx"),download:""},"LineChart.xlsx",8,R)]),L,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/ScatterChart.xlsx"),download:""},"ScatterChart.xlsx",8,N)]),O,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/Histogram.xlsx"),download:""},"Histogram.xlsx",8,z)]),I,n("ul",null,[n("li",null,[n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/name.xlsx"),download:""},"name.xlsx",8,V)])]),n("li",null,[n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/score2.xlsx"),download:""},"score2.xlsx",8,j)])])]),A,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/DataValidation.xlsx"),download:""},"DataValidation.xlsx",8,E)]),H,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/SeperateCol.xlsx"),download:""},"SeperateCol.xlsx",8,J)]),W,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/SeperateCol.xlsx"),download:""},"SeperateCol.xlsx",8,Y)]),Z,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/RemoveDuplicatedData.xlsx"),download:""},"RemoveDuplicatedData.xlsx",8,G)]),K,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/RotateTable.xlsx"),download:""},"RotateTable.xlsx",8,M)]),Q,n("ul",null,[n("li",null,[n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/html.htm"),download:""},"html.htm",8,U)])]),n("li",null,[n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/txt.txt"),download:""},"txt.txt",8,X)])]),n("li",null,[n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/csv.csv"),download:""},"csv.csv",8,nn)])])]),sn,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/PivotTable.xlsx"),download:""},"PivotTable.xlsx",8,an)]),pn,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/LinearRegression.xlsx"),download:""},"LinearRegression.xlsx",8,tn)]),en,on,cn,ln,un,dn,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/ConditionalFormat.xlsx"),download:""},"ConditionalFormat.xlsx",8,rn)]),kn,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/RowOperate.xlsx"),download:""},"RowOperate.xlsx",8,mn)]),vn,n("p",null,[n("a",{href:s.$withBase("/files/Python/Pandas/ColOperate.xlsx"),download:""},"ColOperate.xlsx",8,bn)]),hn])}const fn=o(u,[["render",gn],["__file","Pandas数据分析.html.vue"]]);export{fn as default};
