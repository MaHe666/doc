import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as p,c as u,d as n,e as s,a as t,w as e,f as c}from"./app-Iby1twKr.js";const v={},m={href:"https://blog.csdn.net/qq_45316925/article/details/128957728",target:"_blank",rel:"noopener noreferrer"},h=c(`<h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h2><h3 id="下载需要的环境" tabindex="-1"><a class="header-anchor" href="#下载需要的环境"><span>下载需要的环境</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#一次安装4个插件</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel


<span class="token comment">#一次安装如果有问题，可以试一下分开安装（上面命令执行成功了就无需执行以下命令了）</span>
 	<span class="token comment">#安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境</span>
yum <span class="token function">install</span> gcc-c++
 	<span class="token comment">#pcre是一个perl库，包括perl兼容的正则表达式库，nginx的http模块使用pcre来解析正则表达式，所以需要安装pcre库</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> pcre pcre-devel
 	<span class="token comment">#zlib库提供了很多种压缩和解压缩方式nginx使用zlib对http包的内容进行gzip，所以需要安装</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> zlib zlib-devel
 	<span class="token comment">#nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> openssl openssl-devel

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按顺序做就好" tabindex="-1"><a class="header-anchor" href="#按顺序做就好"><span>按顺序做就好</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 进入到目录</span>
<span class="token builtin class-name">cd</span> /usr/local
<span class="token comment"># 创建文件夹</span>
<span class="token function">mkdir</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下载和安装" tabindex="-1"><a class="header-anchor" href="#下载和安装"><span>下载和安装</span></a></h2><p>下面两种方法中的nginx版本号，可以去看官网</p>`,7),b=n("p",null,[s("使用 "),n("code",null,"wget"),s(" 下载，就执行下面的语句，如果没安装 "),n("code",null,"wget"),s("，使用 "),n("code",null,"yum install wget"),s(" 安装")],-1),g=n("p",null,[s("注意，下载到的文件要放到 "),n("code",null,"/usr/local/nginx"),s(" 中")],-1),_=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"wget"),s(` https://nginx.org/download/nginx-1.24.0.tar.gz
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),x=n("p",null,[s("官网下载的"),n("code",null,"tar.gz"),s("包，直接放到 "),n("code",null,"/usr/local/nginx"),s(" 中")],-1),k=c(`<p>使用如下方式解压</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.24.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后进入到解压缩出来的文件夹中</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#编译</span>
<span class="token function">make</span>
<span class="token comment">#安装</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作nginx" tabindex="-1"><a class="header-anchor" href="#操作nginx"><span>操作Nginx</span></a></h2><p>Nginx的运行目录是 <code>/usr/local/nginx/sbin</code></p>`,7);function f(w,z){const d=i("ExternalLinkIcon"),r=i("Tabs");return p(),u("div",null,[n("p",null,[s("相关博客："),n("a",m,[s("https://blog.csdn.net/qq_45316925/article/details/128957728"),t(d)])]),h,t(r,{id:"20",data:[{id:"wget方式下载"},{id:"压缩包下载"}]},{title0:e(({value:a,isActive:l})=>[s("wget方式下载")]),title1:e(({value:a,isActive:l})=>[s("压缩包下载")]),tab0:e(({value:a,isActive:l})=>[b,g,_]),tab1:e(({value:a,isActive:l})=>[x]),_:1}),k])}const q=o(v,[["render",f],["__file","Nginx安装.html.vue"]]);export{q as default};
