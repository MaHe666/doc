import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as a,d as e,e as o,a as t,f as n}from"./app-d1d9becf.js";const d={},s=e("p",null,"什么是Shiro",-1),h=e("ul",null,[e("li",null,"Apache Shiro是一个Java 的安全(权限)框架。"),e("li",null,"Shiro可以非常容易的开发出足够好的应用，其不仅可以用在JavaSE环境，也可以用在JavaEE环境。"),e("li",null,"Shiro可以完成，认证，授权，加密，会话管理，Web集成，缓存等.")],-1),_={href:"https://shiro.apache.org/",target:"_blank",rel:"noopener noreferrer"},u=n('<h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2><ul><li><code>Authentication</code>：身份认证、登录，验证用户是不是拥有相应的身份</li><li><code>Authorization</code>：授权,即权限验证，验证某个已认证的用户是否拥有某个权限，即判断用户能否进行什么操作，如：验证某个用户是否拥有某个角色，或者细粒度的验证某个用户对某个资源是否具有某个权限</li><li><code>Session Manager</code>：会话管理，即用户登录后就是第一次会话，在没有退出之前，它的所有信息都在会话中，会话可以是普通的 JavaSE 环境，也可以是 Web 环境</li><li><code>Cryptography</code>：加密，保护数据的安全性，如密码加密存储到数据库中，而不是明文存储</li><li><code>Web Support</code>：Web 支持，可以非常容易的集成到 Web 环境</li><li><code>Caching</code>：缓存，比如：用户登录后，其用户信息，拥有的角色、权限不必每次去查，这样可以提高效率</li><li><code>Concurrency</code>：Shiro 支持多线程应用的并发验证，即，如在一个线程中开启另一个线程，能把权限自动的传播过去</li><li><code>Testing</code>：提供测试支持</li><li><code>RunAs</code>：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问</li><li><code>Remember Me</code>：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了</li></ul>',2);function p(f,m){const i=l("ExternalLinkIcon");return r(),a("div",null,[s,h,e("p",null,[o("官网："),e("a",_,[o("https://shiro.apache.org/"),t(i)])]),u])}const g=c(d,[["render",p],["__file","Shiro.html.vue"]]);export{g as default};
