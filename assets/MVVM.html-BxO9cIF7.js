const e=JSON.parse('{"key":"v-07826416","path":"/Program/%E5%89%8D%E7%AB%AF/Vue.js/Vue2/%E7%9F%A5%E8%AF%86%E7%82%B9/MVVM.html","title":"MVVM","lang":"zh-CN","frontmatter":{"title":"MVVM","order":10,"description":"什么是MVVM MVVM（Model-View-ViewModel）是一种软件设计模式，是一种简化用户界面的事件驱动编程方式。 MVVM源自于经典的MVC（Model-View-Controller）模式。MVVM的核心是ViewModel层，负责转换Model中的数据对象来让数据变得更容易管理和使用。其作用如下： 该层向上与视图层进行双向数据绑定 向...","head":[["meta",{"property":"og:url","content":"https://mahe666.github.io/doc/Program/%E5%89%8D%E7%AB%AF/Vue.js/Vue2/%E7%9F%A5%E8%AF%86%E7%82%B9/MVVM.html"}],["meta",{"property":"og:site_name","content":"Mahe666"}],["meta",{"property":"og:title","content":"MVVM"}],["meta",{"property":"og:description","content":"什么是MVVM MVVM（Model-View-ViewModel）是一种软件设计模式，是一种简化用户界面的事件驱动编程方式。 MVVM源自于经典的MVC（Model-View-Controller）模式。MVVM的核心是ViewModel层，负责转换Model中的数据对象来让数据变得更容易管理和使用。其作用如下： 该层向上与视图层进行双向数据绑定 向..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-14T14:17:00.000Z"}],["meta",{"property":"article:author","content":"Mahe666"}],["meta",{"property":"article:modified_time","content":"2024-03-14T14:17:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MVVM\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-14T14:17:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mahe666\\"}]}"]]},"headers":[{"level":2,"title":"什么是MVVM","slug":"什么是mvvm","link":"#什么是mvvm","children":[]},{"level":2,"title":"为什么使用MVVM","slug":"为什么使用mvvm","link":"#为什么使用mvvm","children":[]}],"git":{"createdTime":1710425820000,"updatedTime":1710425820000,"contributors":[{"name":"mahe666","email":"m13234666930@163.com","commits":1}]},"filePathRelative":"Program/前端/Vue.js/Vue2/知识点/MVVM.md","localizedDate":"2024年3月14日","autoDesc":true}');export{e as data};
