import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as p,f as n}from"./app-DXqT2YIa.js";const s={},h=n('<p>PC端测试可从如下方面考虑</p><blockquote><p>UI测试、功能测试、兼容性测试、性能测试、安全性测试、易用性测试</p></blockquote><h2 id="ui测试" tabindex="-1"><a class="header-anchor" href="#ui测试"><span>UI测试</span></a></h2><p>UI的全称：User Interface（用户界面）</p><p>肉眼观察界面各种显示。文字显示是否正确、排版是否合适、控件、图标显示是否合适</p><p><span style="color:red;font-weight:bold;">需要多注意，在需求文档中可能不会提及</span></p><h2 id="功能测试" tabindex="-1"><a class="header-anchor" href="#功能测试"><span>功能测试</span></a></h2><p><strong>根据需求文档写的各个功能进行测试</strong></p><p>功能测试要做的就是按照描述的方式点击页面，查看是否出现输出条件所描述的现象</p><h2 id="兼容性测试" tabindex="-1"><a class="header-anchor" href="#兼容性测试"><span>兼容性测试</span></a></h2><p>可分为以下五点</p><h3 id="操作系统兼容性" tabindex="-1"><a class="header-anchor" href="#操作系统兼容性"><span>操作系统兼容性</span></a></h3><p>测试该应用在Windows，Linux，Mac上是否兼容</p><h3 id="新旧数据转换" tabindex="-1"><a class="header-anchor" href="#新旧数据转换"><span>新旧数据转换</span></a></h3><p>当应用升级后可能定义了新的数据格式或文件格式，涉及对原来格式的支持及更新，需要测试转换过程中数据的完整性和正确性</p><h3 id="异种数据兼容性" tabindex="-1"><a class="header-anchor" href="#异种数据兼容性"><span>异种数据兼容性</span></a></h3><p>测试应用是否提供对其他常用数据格式的支持，支持的程序的兼容性如何</p><h3 id="应用软件兼容性" tabindex="-1"><a class="header-anchor" href="#应用软件兼容性"><span>应用软件兼容性</span></a></h3><p>测试数据或信息是否能导出至第三方软件工具，是否造成其他应用运行错误或应用本身不能正确实现功能</p><h3 id="硬件兼容性" tabindex="-1"><a class="header-anchor" href="#硬件兼容性"><span>硬件兼容性</span></a></h3><p>考察应用对硬件环境有无特殊说明，如对计算机的型号网卡的型号、声卡/显卡的型号等有无特别说明</p><h2 id="性能测试" tabindex="-1"><a class="header-anchor" href="#性能测试"><span>性能测试</span></a></h2><ol><li><p><code>TPS</code>: 全称为Transactions Per Second,指每秒处理的事务数目</p></li><li><p><code>QPS</code>: 全称为Queries Per Second,指每秒处理的查询数目</p></li><li><p><code>并发量</code>: 每秒对待测试接口发起请求的用户数量</p></li><li><p><code>响应时间</code>: 一般指处理一次请求所需要的<em>平均处理时间</em></p></li></ol><p>换算关系：QPS = 并发量 / 响应时间</p><blockquote><p>QPS和TPS的区别是，如果TPS完成该事务仅为单个服务接口，我们也可以认为它就是QPS</p></blockquote><p>性能测试主要就是压力测试</p><p>测试方式: 以一定请求总量，保持不变，逐步增加并发量观察QPS的变化及平均响应时间的变化，目的是找到系统在哪里失效以及如何失效的地方</p><h2 id="安全性测试" tabindex="-1"><a class="header-anchor" href="#安全性测试"><span>安全性测试</span></a></h2><p>测试系统是否会被攻击，盗取资料等</p><p>例如：权限，数据安全等</p><h2 id="易用性测试" tabindex="-1"><a class="header-anchor" href="#易用性测试"><span>易用性测试</span></a></h2><p>易用性可分为五个子特性</p><p>易理解性、易学习性、易操作性、吸引性、依从性</p>',33),c=[h];function o(r,d){return e(),p("div",null,c)}const l=a(s,[["render",o],["__file","PC端测试.html.vue"]]);export{l as default};
