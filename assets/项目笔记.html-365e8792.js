import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as p,d as n,e as o,a as c,f as l}from"./app-1258bec8.js";const i={},u=l(`<h2 id="项目开发笔记" tabindex="-1"><a class="header-anchor" href="#项目开发笔记" aria-hidden="true">#</a> 项目开发笔记</h2><h3 id="数字转为字符串-用0补齐" tabindex="-1"><a class="header-anchor" href="#数字转为字符串-用0补齐" aria-hidden="true">#</a> 数字转为字符串，用0补齐</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%04d&quot;</span>， <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4代表一共几位数，如果把1换为25，那上面的结果就是0025</p><h3 id="stream流对象转换为数组" tabindex="-1"><a class="header-anchor" href="#stream流对象转换为数组" aria-hidden="true">#</a> stream流对象转换为数组</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>创建流对象的<span class="token class-name">List</span>集合对象名<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安全equals" tabindex="-1"><a class="header-anchor" href="#安全equals" aria-hidden="true">#</a> 安全equals</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">safeEqual</span><span class="token punctuation">(</span><span class="token class-name">String</span> a<span class="token punctuation">,</span> <span class="token class-name">String</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> b<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> equal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        equal <span class="token operator">|=</span> a<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> b<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> equal <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目错误笔记" tabindex="-1"><a class="header-anchor" href="#项目错误笔记" aria-hidden="true">#</a> 项目错误笔记</h2><h3 id="java-lang-stackoverflowerror-null" tabindex="-1"><a class="header-anchor" href="#java-lang-stackoverflowerror-null" aria-hidden="true">#</a> java.lang.StackOverflowError: null</h3><p>相关博客：</p>`,11),r={href:"https://blog.csdn.net/c584978688/article/details/120521863",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=t("ExternalLinkIcon");return e(),p("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[o("https://blog.csdn.net/c584978688/article/details/120521863"),c(a)])])])])}const b=s(i,[["render",k],["__file","项目笔记.html.vue"]]);export{b as default};
