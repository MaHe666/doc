import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,d as n,e as s,a as t,f as e}from"./app-BJ-DeeH6.js";const i={},u=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"注意！"),n("p",null,[s("该组件需要和 "),n("code",null,"pytest"),s(" 组合使用")])],-1),r={href:"https://requests.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},d=e(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> requests
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法"><span>常用方法</span></a></h2><p>下面是requests库中发送请求的四种方式，这四种方式会返回一个<code>Response</code>对象</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> json<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
requests<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
requests<span class="token punctuation">.</span>put<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这四种方法都调用了下面的方法</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># method的实参是一个字符串</span>
requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>而这个方法又调用了如下方法</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sessions.Session().request(method=method, url=url, **kwargs)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看源码，发现该函数有很多参数，参数具体含义可参考如下内容（建议去看源码中的注释）：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>method<span class="token punctuation">,</span> <span class="token comment">#请求方式</span>
url<span class="token punctuation">,</span> <span class="token comment">#请求路径</span>
params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#get请求参数</span>
data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#post或put请求参数</span>
headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#请求头</span>
cookies<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#cookie</span>
files<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#文件上传，上传的文件</span>
auth<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#鉴权</span>
timeout<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#超时处理</span>
allow_redirects<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token comment">#是否允许重定向</span>
proxies<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#设置代理</span>
hooks<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#钩子</span>
stream<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#文件下载</span>
verify<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#证书验证</span>
cert<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#CA证书</span>
json<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token comment">#post请求传参的一种方式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json参数" tabindex="-1"><a class="header-anchor" href="#json参数"><span>json参数</span></a></h3><p>可以将post请求的参数，转换为json，然后通过json参数进行请求</p><h3 id="files参数" tabindex="-1"><a class="header-anchor" href="#files参数"><span>files参数</span></a></h3><p>根据对应的接口文档，查看需要传递的参数名是什么</p><p>例如接口参数名为<code>uploadFile</code></p><p>参考如下代码</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_upload_file</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;uploadFile&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;当前机器上的文件绝对路径&quot;</span><span class="token punctuation">}</span>
    <span class="token comment"># 如果接口要求文件字节流的话，使用如下方式</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;uploadFile&quot;</span><span class="token punctuation">:</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;当前机器上的文件绝对路径&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    url <span class="token operator">=</span> <span class="token string">&quot;请求地址&quot;</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>data<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="response" tabindex="-1"><a class="header-anchor" href="#response"><span>Response</span></a></h2><p>返回的response对象的类文件，在与<code>sessions.py</code>文件同级的<code>models.py</code>文件里</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token comment">#响应的文本信息</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#响应的json格式</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment">#响应的字节内容</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span> <span class="token comment">#响应的状态码</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token comment">#响应的状态信息</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token comment">#响应的cookie</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span> <span class="token comment">#响应的编码格式</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>encoding<span class="token punctuation">)</span> <span class="token comment">#响应的编码格式</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>headers<span class="token punctuation">)</span> <span class="token comment">#请求头</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>request<span class="token punctuation">.</span>请求数据<span class="token punctuation">)</span> <span class="token comment">#请求信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解析返回值" tabindex="-1"><a class="header-anchor" href="#解析返回值"><span>解析返回值</span></a></h3><p>响应回来的值大致分为两种，一种是json，还有一种是纯文本，纯文本一般情况下都是html网页</p><p>解析纯文本，可以使用正则表达式进行解析</p><p>解析json可参考如下内容</p><h3 id="jsonpath" tabindex="-1"><a class="header-anchor" href="#jsonpath"><span>JsonPath</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> jsonpath
<span class="token keyword">import</span> requests


<span class="token comment"># https://www.mxnzp.com/api/jokes/list?page=1&amp;app_id=不再提供请自主申请&amp;app_secret=不再提供请自主申请</span>


<span class="token keyword">class</span> <span class="token class-name">TestApi</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">test_jokes</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;app_id&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;你不会以为我会写在这吧&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;app_secret&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;想弄的话自己去注册，反正也是免费的&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;page&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
        url <span class="token operator">=</span> <span class="token string">&quot;https://www.mxnzp.com/api/jokes/list&quot;</span>

        resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span>
        joke_list <span class="token operator">=</span> jsonpath<span class="token punctuation">.</span>jsonpath<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;$.data.list..content&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> joke <span class="token keyword">in</span> joke_list<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>joke<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;\\n\\n&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    TestApi<span class="token punctuation">.</span>test_jokes<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于JsonPath表达式的语法：</p><table><thead><tr><th><strong>符号</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>$</td><td>表示json的根节点，表示根节点下的所有数据</td></tr><tr><td>.</td><td>表示子节点，如 $.store 表示根节点下的store节点下的所有数据</td></tr><tr><td>..</td><td>可实现递归搜索，如 $..title 表示搜索json中所有key为title属性的值</td></tr></tbody></table>`,28),k={href:"https://juejin.cn/post/6850418109473783816",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/json-path/JsonPath",target:"_blank",rel:"noopener noreferrer"},v=e(`<h3 id="json序列化" tabindex="-1"><a class="header-anchor" href="#json序列化"><span>Json序列化</span></a></h3><p>该方法用于将json对象（字典）转换为json字符串</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>json_obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该方法用于将json字符串转换为json对象（字典）</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5);function b(h,g){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("官网："),n("a",r,[s("https://requests.readthedocs.io/en/latest/"),t(a)])]),d,n("p",null,[s("相关博客："),n("a",k,[s("https://juejin.cn/post/6850418109473783816"),t(a)])]),n("p",null,[s("Github地址："),n("a",m,[s("https://github.com/json-path/JsonPath"),t(a)])]),v])}const j=p(i,[["render",b],["__file","requests.html.vue"]]);export{j as default};
